import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom"; // –î–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
import { DndContext } from "@dnd-kit/core";
import TaskColumn from "./TaskColumn";
import "./App.css";
import { addUserIfNotExists, getUserTasks, updateUserTasks } from "./firestoreUtils";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
function getTelegramUserFromUrl() {
  console.log("üì• –§—É–Ω–∫—Ü–∏—è getTelegramUserFromUrl –≤—ã–∑–≤–∞–Ω–∞!"); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è
  const params = new URLSearchParams(window.location.search);
  if (params.has("id")) {
    return {
      id: params.get("id"),
      first_name: params.get("first_name"),
      last_name: params.get("last_name"),
      username: params.get("username"),
      photo_url: params.get("photo_url"),
      auth_date: params.get("auth_date"),
      hash: params.get("hash"),
    };
  }
  return null;
}

export default function App() {
  console.log("‚úÖ App.js –∑–∞–ø—É—â–µ–Ω!"); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ª–∏ App.js
  
  const [user, setUser] = useState(null);
  const [tasks, setTasks] = useState([]); // –ú–∞—Å—Å–∏–≤ –∑–∞–¥–∞—á
  const [loading, setLoading] = useState(true);
  const navigate = useNavigate(); // –•—É–∫ –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–µ Telegram –∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –ª–æ–≥–∏–Ω –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏
  useEffect(() => {
    console.log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...");
    
    let telegramUser = getTelegramUserFromUrl();

    if (telegramUser) {
      console.log("‚úÖ –ù–∞–π–¥–µ–Ω Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", telegramUser);
      setUser(telegramUser);
      localStorage.setItem("telegramUser", JSON.stringify(telegramUser)); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
      window.history.replaceState({}, document.title, "/"); // –û—á–∏—â–∞–µ–º URL
    } else {
      console.log("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /login...");
      navigate("/login"); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    }
  }, [navigate]);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Firebase
  useEffect(() => {
    async function init() {
      if (user) {
        console.log("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", user.id);
        await addUserIfNotExists(user.id, user.first_name);
        const userTasks = await getUserTasks(user.id);
        setTasks(userTasks);
        setLoading(false);
      }
    }
    init();
  }, [user]);

  if (loading) return <div>–ó–∞–≥—Ä—É–∑–∫–∞... –ü–æ–¥–æ–∂–¥–∏—Ç–µ!</div>;

  const activeTasks = tasks.filter((task) => task.columnId === "active");
  const passiveTasks = tasks.filter((task) => task.columnId === "passive");
  const purgatoryTasks = tasks.filter((task) => task.columnId === "purgatory");

  return (
    <DndContext onDragEnd={() => {}}>
      <div
        style={{
          padding: "20px",
          fontFamily: "Arial, sans-serif",
          backgroundColor: "#222",
          color: "#eee",
          minHeight: "100vh",
        }}
      >
        <h1 style={{ textAlign: "center" }}>Task Planner –¥–ª—è ADHD</h1>
        <p>–ü—Ä–∏–≤–µ—Ç, {user?.first_name || "–ì–æ—Å—Ç—å"}!</p>
        <div className="container">
          <div className="active-passive-container">
            <div className="column">
              <TaskColumn columnId="active" title="Active Projects" tasks={activeTasks} />
            </div>
            <div className="column">
              <TaskColumn columnId="passive" title="Passive Projects" tasks={passiveTasks} />
            </div>
          </div>
          <div className="column full-width">
            <TaskColumn columnId="purgatory" title="Purgatory" tasks={purgatoryTasks} />
          </div>
        </div>
      </div>
    </DndContext>
  );
}
